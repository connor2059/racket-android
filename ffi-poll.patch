Only in /Users/jay/Dev/scm/plt/racket/src: .gitignore
Only in .: ffi-poll.patch
diff -ur -x build /Users/jay/Dev/scm/plt/racket/src/foreign/foreign.c ./foreign/foreign.c
--- /Users/jay/Dev/scm/plt/racket/src/foreign/foreign.c	2016-04-08 19:24:39.000000000 -0400
+++ ./foreign/foreign.c	2016-08-03 12:27:06.000000000 -0400
@@ -3505,7 +3505,7 @@
          to handle those anyway, since the call in the original
          place may lead to a callback that should run in
          this place. */
-      check_foreign_work(0);
+      // check_foreign_work(0);
     }
   }
 }
@@ -3580,7 +3580,7 @@
   int i;
   intptr_t basetype, offset, *offsets;
 #ifdef MZ_USE_PLACES
-  if (orig_place && (scheme_current_place_id == 0))
+  if (orig_place && ((scheme_current_place_id == 0) && 0))
     orig_place = 0;
 #endif
   if (!cif) {
@@ -3722,7 +3722,7 @@
   int i, nargs, save_errno;
   Scheme_Object *lock = scheme_false;
 # ifdef MZ_USE_PLACES
-  int orig_place;
+  int orig_place = 1;
 # define FFI_CALL_VEC_SIZE 9
 # else /* MZ_USE_PLACES undefined */
 # define FFI_CALL_VEC_SIZE 8
@@ -3758,8 +3758,8 @@
   } else
     save_errno = 0;
 # ifdef MZ_USE_PLACES
-  if (argc > 5) orig_place = SCHEME_TRUEP(argv[5]);
-  else orig_place = 0;
+  //  if (argc > 5) orig_place = SCHEME_TRUEP(argv[5]);
+  //  else orig_place = 0;
 # endif /* MZ_USE_PLACES */
   if (argc > 6) {
     if (!SCHEME_FALSEP(argv[6])) {
@@ -3899,6 +3899,7 @@
 }
 
 static void check_foreign_work(int check_for_in_original)
+XFORM_SKIP_PROC
 {
   GC_CAN_IGNORE Queued_Callback *qc;
   ffi_callback_struct *data;
@@ -3933,7 +3934,7 @@
   }
 
 #ifdef MZ_USE_PLACES
-  if (check_for_in_original && (scheme_current_place_id == 0) && orig_place_mutex) {
+  if (check_for_in_original && ((scheme_current_place_id == 0) || 1) && orig_place_mutex) {
     FFI_Orig_Place_Call *todo;
     void *sh;
 
@@ -3967,6 +3968,7 @@
 }
 
 void scheme_check_foreign_work(void)
+XFORM_SKIP_PROC
 {
   check_foreign_work(1);
 }
Only in /Users/jay/Dev/scm/plt/racket/src/foreign/libffi: .gitignore
Only in /Users/jay/Dev/scm/plt/racket/src/myssink: .gitignore
Only in /Users/jay/Dev/scm/plt/racket/src/mzcom: .gitignore
Only in /Users/jay/Dev/scm/plt/racket/src/racket: .gitignore
Only in /Users/jay/Dev/scm/plt/racket/src/racket/dynsrc: .gitignore
diff -ur -x build /Users/jay/Dev/scm/plt/racket/src/racket/src/thread.c ./racket/src/thread.c
--- /Users/jay/Dev/scm/plt/racket/src/racket/src/thread.c	2016-04-01 05:41:54.000000000 -0400
+++ ./racket/src/thread.c	2016-08-03 11:10:07.000000000 -0400
@@ -4994,8 +4994,8 @@
     scheme_check_future_work();
 #endif
 #if defined(MZ_USE_MZRT) && !defined(DONT_USE_FOREIGN)
-  if (!do_atomic)
-    scheme_check_foreign_work();
+  //  if (!do_atomic)
+  //  scheme_check_foreign_work();
 #endif
 
   skip_sleep = 0;
Only in /Users/jay/Dev/scm/plt/racket/src/worksp: .gitignore
Only in /Users/jay/Dev/scm/plt/racket/src/worksp/gc2: .gitignore
Only in /Users/jay/Dev/scm/plt/racket/src/worksp/myssink: .gitignore
Only in /Users/jay/Dev/scm/plt/racket/src/worksp/mzcom: .gitignore
